<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btn_exportToExcel.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        R0lGODlhQABAAIf/AANaCgBeAABiDwBlGw9iGQBpAAtmCgBrDwBwAAtwEAB0DhVxJQB7CA15ByhuKwB/
        Dw17Fxd9DwqCBS5zMDRyNyB5LQSJAACJDyp5NS56LxeGDh2EIDd8ODN+MwCSDCuBOyqCNRWPCDGEMT+A
        SRaSGiyJNRySDxSXBCaQGTCLMBCYFiWRJTOMRSOWFSiXBjGRQh6dDkKMUx6gHy2dHSmhAh2lCTKfEzmc
        HiOmAE6STTmaPzWdMS6gKjOfOSyiNCmlJSSmLkKaTjCmDS+nHSerEy+tBC2uLjytDTCtNi6xKHOVcyC1
        K2CdYkCsNzazE3iWezyxKD21AEurTn2Yd0WwMj+xQjW3LVGtQHqcejS5OFuqY0myS3agfGinZkS7DEK4
        OU62L3qieFyxTD69NFeyWlC1VXOnezy+PmCyXmSyVYakiEvBF1K6UmqyX0+8TVDDB0HDQle/LEDFS0zE
        S1XIEnG1fGe6aX+wh2q6Y2y6cFvLAFDHT1/BYHu2f1zDW2e/ZJmrmHC9X2TFT3DCVVXLWX67hl7IZo+3
        jXfAfHvBeIa7l3DGc3DHbmfKb3bIWmrLaYbAhZS6nIDFcGPPZYPDgHLNXn/IforFiojFkIDJhXXPdH/N
        bmrUcY/HhYzJgJLGj4rKh4jLjnTUcnzRfXHVeZrHn7XBuX7YfY7RlJHSjozUkIjWioTYhH3ahZfSlZ3R
        n4jciKfQpbjKt5jbdoreipzZj6PWm5DekZ/bhJrbl5jcnrDUsZLhlJrglKbbp5jhnKLeoa/ZrqvcoaLj
        n6HlprjduqXkrb7bwazjranlqNPV0qznqrrjt7Tmt7HosrTorMTkxrrptMHmwLTrtc3h07LusbnrvNDj
        zszly7zuv8DtxsPtwMfsxszszuHk4NDsycruydPrz9Hs1sjyxdXs3dzq3tDw0trvzc7zzdvu2ejq5+rs
        6Nrz1+Lx5Obw69r13+rx5uH14Ojz4Oj36vL08eb55Oz77vb49PP67vL89vn7+Pz++//9//n///7//Pf3
        9yH/C05FVFNDQVBFMi4wAwEBAAAh+QQBAAD/ACwAAAAAQABAAAAI/wDvCRxIsKDBgwgTKlzIsKHDhxAL
        0ovV5sqNFhgxmtjIcWOIjxZCXrigoaTJkhIkPFjJMoLLQ+sc0sOWBuOMK4EkWQLFsyfPTkCDAr3U6ZLR
        o0ghKV0K6VOfDWbUNZSHp8UMSd/8+eunL5/XfPjCig1rr6w9fGbTql1rLx+8FGFiKqQXjMfVfP3ifdvG
        t++2bNYCRxvsrHBhZIiNLVvMOJnjx5C3pYMrFyG9TyaudPPHbps2cKDBafMLOLDgZtOcpTZs+Bmyxsge
        M5ZMOeHlFnjkzQvNG1zfbNtMW4u2mrUzxIwXQ16ejBjtuAmDmcAzL15v0KP5lh5O2Piz5I+Jif8fT178
        sGyToR+Ux+OKvHifeZPePri4YeWPh5kfxr+/f/7o1WYQPXjM0M1u6CSoIDrj/CVcd6pN80w1yRHz34W/
        ZKjhL9akU4J6BWHTgiT+gMPMK5gcFUoolKATHHesTcMiIjTWGEo2vwyzYYa9/NLLj0DyMo2HIBKUxgz5
        sAOaFglA4OQGUKLhjzPExYjKBwtkqSUG0GzT44+8hMnLLWOOecuZtwz5YWUD0TNiP9uAg44vKRSgAAII
        NNDAA8WwY9xiLAxAwKAEDDCAGfWIaSaajDJKizMecsGmQLG08A18oKGTRwN5MvBASiv4Y8191Whh6KmG
        YpDPMGcueiYtsN7/EuuZsCwT6aT3tDGDP+jwpo0OCKwkQUkXSJnMa9VkUkGhqA6AzTaNygrrtLBUCwus
        taYjgqQGXXGFP3GKpo02wKzAwLAjWdACM+wM0xwLzJ5KgBn2wIImtdbmm+8ptoqABa43BAInaH2hg0dJ
        IW3kAQ/2REOMqc0OUIE/r9KibyuwYGztKaeQIgonvYjjL64j6hNndsGNs4MFIWx0wgkwBGKPsvEaSgA5
        0Vy7cSsdczLJJIQQsoccexQ9dCsi/2tQC4nkE2dfpgHTggkewAwDDUMIYwYAEd9RzykZnyIK0EaXbXbR
        crQSDghKF9SCJ05rZ1o02/zx8tU0CFGDCwsU/8osARzkc4rPQp9t9hyII74HHKes3TZBLYASt4PDpZYN
        FVcLIUQRnGswqM0DlHPLHoWfjbgccKAOx+qsn9E427iaAAo+csNY2DBDaM55EU4IAQGzAESyDelny2H8
        6mckr/zyZ5DieOyzAydYNPdlI0wNnDuhvRc29A1ADOGA8YXiRc/ROvPonzGG8x08PpDs+FjzIvWGJWOO
        P47wHoUX/HuBQqHU+MYmqFCDJHzhC2dAXvrSNwZRhKN90MNHNARTnGUMAx/8kEccnMC/NbzhDVFQQCT0
        4Q98cEMYjMDcEIyQBeZl4YUwjKEVHvFA9wnEBJ1omGAME5toaMUfidjfB/+HeIR0/FAr8/iGLwIhgxP8
        4AdGSF4MX2gFGC7hEdBon1QKgkMJ2u41w3iHVtpBABPQ4YNn/CAuSHhErcijG7bYggc8oAIoWuGOeMTj
        FbEBQYPgsGEQcsYwYGGPfvjjAwAwgBPeQIdGftAL3+BHG3+oj3mEAxU+sIAJSPCDJCxhCUnwpCex2Ecu
        5tAZ1ijOL06RDBIqQgCwbMAZ07iGKMQBH/nQiiR1SUl4hCMRJJDABTj5yWIaIotY2CJBQnBK+i3jFqzg
        BDv80Q5YWrMFevjgGrwQhSKs0R/mmMckj9gVadjhAipBgQyWYIVjatEgzLQHlaaRDGiCTZwgMIA1BXD/
        gCO8YZte0B4O2IGPZiDmG/gYJzmDIQWVPAAFfAgHB5IJz1PS02KsEIUz/FGIBBzgAPqEZQRqGQXtFUEI
        R/CHQYGRi1XowhxsHKck8/EKHTBgA0EQAEULEk9nJKNarGiFKOJBDggoQAEePYAAFlCKWZTUCUUgghBo
        IAl8IIOlq2CFJjQBjHgccZdtbMcngkCAJyhzIBbIIatuAQtWnKIX9tDBAxhwVAV8lAkligPnpEoDGpwg
        K/NohipWoYlG8MEN4cjHPHKpUK0cQxa4Sms87AVUUYyDEhpwaASOKoJ8kLAWUp2qDWBwAiT9EBy5GIUh
        VKEPXyCBEc1IR0Ib6w16/xQkrfWgrFtPgYwdjCSzD4jABoqhlXzEYxB9hQFpTRACPPgDrPPQxWb4gAQk
        /AAIi5CGOO4xTmXYliAX6MRk2erWXlzBIyRRyXBjUYpr+OMbVHjZCTYSEuLO9of5QMUfqvADGajAAz7I
        RDHSEVNveMMg4Z1stXjmBhucwAUbSS8DClAAAODVH654GXMtQJIVpEM0Xn0uEpthiTLIYI4hsUM7RGyK
        AxdEA53IbVthMYmpKne+JiDJSiBQgC5oRR9i2HB6H9CGdzRiFL4QZxvF4Qo7ZFICZGBjOQBxVoHAuB4Y
        cysYNJfc+YZAxxHosT/EmQ4UkAS4DYhALLbhhlHgg/8ZqZBGG/UhjUuQwRc/vIMaqnwPDVzia20VxBEG
        zWUYQPjLK0GAj9+Ry0RkViUM4FQJoLEKPC8CCWz4QyY2c8R53HcEZjWIn+PBClhU4gg4KAIOcODXE4TA
        AhJgAJ4CgFdxmmMbPcAThQPA6xzEIx/iYMMPrAuEKpTBFSE+IjkcEOoXX+IdYBNFL9hxjmqfIxzYxrY4
        sHGNa8BDH13RhjOAkQpLWMIV0CgHNcpR3Hj4gg0y8K8KeOADKQTjiKUoK59HfYqgbqOxjZ0HN1j6i1UY
        fBXciKk/9IEPcVjixBuWwhHrAIBmE4TfrLhFsicJFk+PUx/dSO0oCmuIVdyXkvn/YIYUOOyKH4pDC/oW
        9SXiwTFiNJbh+KgOO+KhD7D+cB7IYIQh/KALf6iiCqkQJz/Aig9frFgrmHhBzAsiAUjQHBb//io5qxMP
        c3i16yf/ITdUYQ5x8KEJ1i1DMGK69B/iQwtSt/hAqk7zXyhZ6+SsBzvmoQ9wXBUZ3fDsJLnBhiogAQg8
        UIEK/iANwf9wFynoA7P5/ACrn8LmeFcoP+ahjavqYhWjAIY58KFwf3RjEVUAguI9YAEStPyHdWjALigg
        d4FUntRZ+Ti4x4kPc0RDF6pgxSge0QhgiLGN+fDFFnxAAg5T4oftCEIJjkF7ykPiHbfIh89FzPB5eB+X
        249H/zRa2ohH+GEUpj/QkhPRgx3cfRcQ0AE0qm+Q22Me792PxzvM8Q5+gKWNJqQLo9AIO8cGSLAIvtAN
        YSdnP1QIBSAF81d79xABkFAPuadQ3bd/fGcO2uB1YRcPzOAP0jBs/dUEi/AKnNZG5BAEDbAFEchnFNgW
        28dLP5ZzleQMxpALumAMzTB6bZQOrrAITeBfrMcDdhAKRvRDx4AAEuAGL2gQFAhwCpUk5mAOvtEM4LBx
        PycNqJAJlpAIiWAHiCAOR7QLOrAFo3AN9FcQDdAH9AAPcBiH8OAOdFiHcUiHcdgOetgO5NAOdfiH9OAO
        5TCIhOiHdXgN0AAN4kANk2cQDYiwASkQiZKYAiVQiSUgApiYiZgIApzYAR2QAaAYiqGIARNQiqZ4iqg4
        ARRAAQ4AAErAZ4dgBmEwi7RIi1xwi1iQi7q4i7s4Bb74i7/4BMI4jMRYjMOoBKaAK+ugDuvQjM74jNAY
        jc3IjOpQjdZ4jdiYjdrIjBHRjd74jeAYjuI4juRYjubojQEBADs=
</value>
  </data>
</root>